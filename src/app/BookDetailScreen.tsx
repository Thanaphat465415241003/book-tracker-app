import { ThemedText } from '@/components/themed-text';
import { Colors } from '@/constants/theme';
import { Book } from '@/types/navigation';
import { useLocalSearchParams } from 'expo-router';
import React, { useState } from 'react';
import {
  Alert,
  Platform,
  ScrollView,
  StyleSheet,
  TouchableOpacity,
  View,
} from 'react-native';

export default function BookDetailScreen() {
  // ‡∏£‡∏±‡∏ö params ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å HomeScreen
  const { book } = useLocalSearchParams<{ book: string }>();

  // parse ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô object
  const parsedBook: Book | null = book ? JSON.parse(book) : null;

  const theme = Colors['light'];

  // Mock data ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
  const [bookDetails, setBookDetails] = useState({
    isbn: '978-0-7352-1129-2',
    pages: 320,
    publisher: 'Avery Publishing',
    publishYear: 2018,
    category: 'Self-Development',
    language: 'English',
    rating: 4.8,
    reviews: 1250,
    dateAdded: '15 ‡∏Å.‡∏Ñ. 2024',
    dateStarted: parsedBook?.status === 'reading' ? '20 ‡∏Å.‡∏Ñ. 2024' : null,
    dateFinished: parsedBook?.status === 'finished' ? '5 ‡∏™.‡∏Ñ. 2024' : null,
    currentPage: parsedBook?.status === 'reading' ? 156 : null,
    notes: '‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏î‡∏µ‡∏°‡∏≤‡∏Å ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ß‡∏¥‡∏ò‡∏µ‡∏Ñ‡∏¥‡∏î‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏¥‡∏™‡∏±‡∏¢‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á',
    tags: ['Productivity', 'Habits', 'Psychology', 'Self-Help']
  });

  const [isFavorite, setIsFavorite] = useState(false);

  if (!parsedBook) {
    return (
      <View style={styles.errorContainer}>
        <ThemedText style={styles.errorTitle}>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠</ThemedText>
        <ThemedText style={styles.errorText}>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</ThemedText>
      </View>
    );
  }

  const getStatusInfo = (status: Book['status']) => {
    switch (status) {
      case 'not_read':
        return { color: '#FFE4B5', textColor: '#D2691E', icon: '‚≠ê', label: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡πà‡∏≤‡∏ô' };
      case 'reading':
        return { color: '#E6F3FF', textColor: '#1E90FF', icon: 'üìñ', label: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡πà‡∏≤‡∏ô' };
      case 'finished':
        return { color: '#E8F5E8', textColor: '#228B22', icon: '‚úÖ', label: '‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß' };
      default:
        return { color: '#F5F5F5', textColor: '#666666', icon: 'üìö', label: '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏' };
    }
  };

  const statusInfo = getStatusInfo(parsedBook.status);

  const handleStatusChange = () => {
    const statusOptions = [
      { label: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡πà‡∏≤‡∏ô', value: 'not_read' },
      { label: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡πà‡∏≤‡∏ô', value: 'reading' },
      { label: '‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß', value: 'finished' }
    ];

    Alert.alert(
      '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞',
      '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏•‡πà‡∏°‡∏ô‡∏µ‡πâ',
      [
        ...statusOptions.map(option => ({
          text: option.label,
          onPress: () => Alert.alert('‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', `‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "${option.label}" ‡πÅ‡∏•‡πâ‡∏ß`)
        })),
        { text: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å', style: 'cancel' }
      ]
    );
  };

  const handleAddToFavorites = () => {
    setIsFavorite(!isFavorite);
    Alert.alert(
      isFavorite ? '‡∏•‡∏ö‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î' : '‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î',
      `${parsedBook.title} ${isFavorite ? '‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏à‡∏≤‡∏Å' : '‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô'}‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î‡πÅ‡∏•‡πâ‡∏ß`
    );
  };

  return (
    <View style={styles.container}>
      {/* Header */}
      <View style={styles.headerContainer}>
        <View style={styles.headerContent}>
          <View style={styles.bookIconContainer}>
            <View style={[styles.bookIcon, { backgroundColor: statusInfo.color }]}>
              <ThemedText style={styles.bookIconText}>{statusInfo.icon}</ThemedText>
            </View>
            <TouchableOpacity 
              style={[styles.favoriteButton, { backgroundColor: isFavorite ? '#FF6B6B' : '#FFFFFF' }]}
              onPress={handleAddToFavorites}
            >
              <ThemedText style={styles.favoriteIcon}>
                {isFavorite ? '‚ù§Ô∏è' : 'ü§ç'}
              </ThemedText>
            </TouchableOpacity>
          </View>
        </View>
      </View>

      <ScrollView 
        style={styles.scrollContainer}
        showsVerticalScrollIndicator={false}
        contentContainerStyle={styles.scrollContent}
      >
        {/* Book Title & Author */}
        <View style={styles.titleSection}>
          <ThemedText style={styles.bookTitle}>{parsedBook.title}</ThemedText>
          <ThemedText style={styles.bookAuthor}>‡πÇ‡∏î‡∏¢ {parsedBook.author}</ThemedText>
          
          {/* Status Badge */}
          <View style={[styles.statusBadge, { backgroundColor: statusInfo.color }]}>
            <ThemedText style={[styles.statusText, { color: statusInfo.textColor }]}>
              {statusInfo.icon} {statusInfo.label}
            </ThemedText>
          </View>
        </View>

        {/* Reading Progress (only for reading books) */}
        {parsedBook.status === 'reading' && bookDetails.currentPage && (
          <View style={styles.progressSection}>
            <ThemedText style={styles.sectionTitle}>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô</ThemedText>
            <View style={styles.progressCard}>
              <View style={styles.progressInfo}>
                <ThemedText style={styles.progressNumber}>
                  {bookDetails.currentPage}/{bookDetails.pages}
                </ThemedText>
                <ThemedText style={styles.progressLabel}>‡∏´‡∏ô‡πâ‡∏≤</ThemedText>
              </View>
              <View style={styles.progressBarContainer}>
                <View style={styles.progressBarBackground}>
                  <View style={[
                    styles.progressBarFill, 
                    { width: `${(bookDetails.currentPage / bookDetails.pages) * 100}%` }
                  ]} />
                </View>
                <ThemedText style={styles.progressPercentage}>
                  {Math.round((bookDetails.currentPage / bookDetails.pages) * 100)}%
                </ThemedText>
              </View>
            </View>
          </View>
        )}

        {/* Book Information */}
        <View style={styles.section}>
          <ThemedText style={styles.sectionTitle}>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠</ThemedText>
          <View style={styles.infoCard}>
            <View style={styles.infoRow}>
              <ThemedText style={styles.infoLabel}>üìñ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡πâ‡∏≤</ThemedText>
              <ThemedText style={styles.infoValue}>{bookDetails.pages} ‡∏´‡∏ô‡πâ‡∏≤</ThemedText>
            </View>
            <View style={styles.infoRow}>
              <ThemedText style={styles.infoLabel}>üè¢ ‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏û‡∏¥‡∏°‡∏û‡πå</ThemedText>
              <ThemedText style={styles.infoValue}>{bookDetails.publisher}</ThemedText>
            </View>
            <View style={styles.infoRow}>
              <ThemedText style={styles.infoLabel}>üìÖ ‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏û‡∏¥‡∏°‡∏û‡πå</ThemedText>
              <ThemedText style={styles.infoValue}>{bookDetails.publishYear}</ThemedText>
            </View>
            <View style={styles.infoRow}>
              <ThemedText style={styles.infoLabel}>üìö ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</ThemedText>
              <ThemedText style={styles.infoValue}>{bookDetails.category}</ThemedText>
            </View>
            <View style={styles.infoRow}>
              <ThemedText style={styles.infoLabel}>üåê ‡∏†‡∏≤‡∏©‡∏≤</ThemedText>
              <ThemedText style={styles.infoValue}>{bookDetails.language}</ThemedText>
            </View>
            <View style={styles.infoRow}>
              <ThemedText style={styles.infoLabel}>üî¢ ISBN</ThemedText>
              <ThemedText style={styles.infoValue}>{bookDetails.isbn}</ThemedText>
            </View>
          </View>
        </View>

        {/* Rating & Reviews */}
        <View style={styles.section}>
          <ThemedText style={styles.sectionTitle}>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</ThemedText>
          <View style={styles.ratingCard}>
            <View style={styles.ratingSection}>
              <View style={styles.ratingDisplay}>
                <ThemedText style={styles.ratingNumber}>{bookDetails.rating}</ThemedText>
                <View style={styles.starsContainer}>
                  {[1, 2, 3, 4, 5].map(star => (
                    <ThemedText key={star} style={styles.star}>
                      {star <= Math.floor(bookDetails.rating) ? '‚≠ê' : '‚òÜ'}
                    </ThemedText>
                  ))}
                </View>
              </View>
              <ThemedText style={styles.reviewCount}>
                {bookDetails.reviews.toLocaleString()} ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
              </ThemedText>
            </View>
          </View>
        </View>

        {/* Reading Dates */}
        <View style={styles.section}>
          <ThemedText style={styles.sectionTitle}>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç</ThemedText>
          <View style={styles.datesCard}>
            <View style={styles.dateRow}>
              <ThemedText style={styles.dateLabel}>üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°</ThemedText>
              <ThemedText style={styles.dateValue}>{bookDetails.dateAdded}</ThemedText>
            </View>
            {bookDetails.dateStarted && (
              <View style={styles.dateRow}>
                <ThemedText style={styles.dateLabel}>üìñ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡πà‡∏≤‡∏ô</ThemedText>
                <ThemedText style={styles.dateValue}>{bookDetails.dateStarted}</ThemedText>
              </View>
            )}
            {bookDetails.dateFinished && (
              <View style={styles.dateRow}>
                <ThemedText style={styles.dateLabel}>‚úÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏ö</ThemedText>
                <ThemedText style={styles.dateValue}>{bookDetails.dateFinished}</ThemedText>
              </View>
            )}
          </View>
        </View>

        {/* Tags */}
        <View style={styles.section}>
          <ThemedText style={styles.sectionTitle}>‡πÅ‡∏ó‡πá‡∏Å</ThemedText>
          <View style={styles.tagsContainer}>
            {bookDetails.tags.map((tag, index) => (
              <View key={index} style={styles.tag}>
                <ThemedText style={styles.tagText}>{tag}</ThemedText>
              </View>
            ))}
          </View>
        </View>

        {/* Notes */}
        {bookDetails.notes && (
          <View style={styles.section}>
            <ThemedText style={styles.sectionTitle}>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</ThemedText>
            <View style={styles.notesCard}>
              <ThemedText style={styles.notesText}>{bookDetails.notes}</ThemedText>
            </View>
          </View>
        )}

        {/* Action Buttons */}
        <View style={styles.actionSection}>
          <TouchableOpacity 
            style={styles.primaryButton}
            onPress={handleStatusChange}
          >
            <ThemedText style={styles.primaryButtonText}>üîÑ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</ThemedText>
          </TouchableOpacity>

          <View style={styles.secondaryButtonsRow}>
            <TouchableOpacity style={styles.secondaryButton}>
              <ThemedText style={styles.secondaryButtonText}>‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</ThemedText>
            </TouchableOpacity>
            <TouchableOpacity style={styles.secondaryButton}>
              <ThemedText style={styles.secondaryButtonText}>üìù ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏ô‡πä‡∏ï</ThemedText>
            </TouchableOpacity>
          </View>

          <TouchableOpacity style={styles.shareButton}>
            <ThemedText style={styles.shareButtonText}>üì§ ‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô</ThemedText>
          </TouchableOpacity>
        </View>

        <View style={styles.bottomPadding} />
      </ScrollView>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#FEF9C3',
  },

  // Error State
  errorContainer: {
    flex: 1,
    backgroundColor: '#FEF9C3',
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: 20,
  },
  errorTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#8B4513',
    marginBottom: 8,
  },
  errorText: {
    fontSize: 16,
    color: '#A0522D',
  },

  // Header
  headerContainer: {
    backgroundColor: '#F4E99B',
    paddingTop: Platform.OS === 'ios' ? 60 : 40,
    paddingHorizontal: 20,
    paddingBottom: 20,
    borderBottomLeftRadius: 30,
    borderBottomRightRadius: 30,
  },
  headerContent: {
    alignItems: 'center',
  },
  bookIconContainer: {
    position: 'relative',
  },
  bookIcon: {
    width: 80,
    height: 80,
    borderRadius: 40,
    justifyContent: 'center',
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.2,
    shadowRadius: 8,
    elevation: 6,
  },
  bookIconText: {
    fontSize: 32,
  },
  favoriteButton: {
    position: 'absolute',
    top: -5,
    right: -5,
    width: 32,
    height: 32,
    borderRadius: 16,
    justifyContent: 'center',
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.2,
    shadowRadius: 4,
    elevation: 3,
  },
  favoriteIcon: {
    fontSize: 16,
  },

  // Scroll Container
  scrollContainer: {
    flex: 1,
  },
  scrollContent: {
    paddingHorizontal: 20,
    paddingTop: 20,
  },

  // Title Section
  titleSection: {
    alignItems: 'center',
    marginBottom: 24,
  },
  bookTitle: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#8B4513',
    textAlign: 'center',
    marginBottom: 8,
  },
  bookAuthor: {
    fontSize: 16,
    color: '#A0522D',
    textAlign: 'center',
    marginBottom: 16,
  },
  statusBadge: {
    paddingHorizontal: 16,
    paddingVertical: 8,
    borderRadius: 20,
  },
  statusText: {
    fontSize: 14,
    fontWeight: '600',
  },

  // Progress Section
  progressSection: {
    marginBottom: 20,
  },
  progressCard: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    padding: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  progressInfo: {
    flexDirection: 'row',
    alignItems: 'baseline',
    justifyContent: 'center',
    marginBottom: 16,
  },
  progressNumber: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#8B4513',
  },
  progressLabel: {
    fontSize: 16,
    color: '#A0522D',
    marginLeft: 8,
  },
  progressBarContainer: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  progressBarBackground: {
    flex: 1,
    height: 8,
    backgroundColor: '#F4E99B',
    borderRadius: 4,
    marginRight: 12,
  },
  progressBarFill: {
    height: '100%',
    backgroundColor: '#D4A574',
    borderRadius: 4,
  },
  progressPercentage: {
    fontSize: 14,
    fontWeight: 'bold',
    color: '#8B4513',
    minWidth: 40,
  },

  // Sections
  section: {
    marginBottom: 20,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#8B4513',
    marginBottom: 12,
  },

  // Info Card
  infoCard: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    padding: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  infoRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 16,
    paddingBottom: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#F4E99B',
  },
  infoLabel: {
    fontSize: 14,
    color: '#A0522D',
    flex: 1,
  },
  infoValue: {
    fontSize: 14,
    color: '#8B4513',
    fontWeight: '500',
    flex: 1,
    textAlign: 'right',
  },

  // Rating Card
  ratingCard: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    padding: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  ratingSection: {
    alignItems: 'center',
  },
  ratingDisplay: {
    alignItems: 'center',
    marginBottom: 8,
  },
  ratingNumber: {
    fontSize: 32,
    fontWeight: 'bold',
    color: '#8B4513',
    marginBottom: 8,
  },
  starsContainer: {
    flexDirection: 'row',
    gap: 2,
  },
  star: {
    fontSize: 16,
  },
  reviewCount: {
    fontSize: 14,
    color: '#A0522D',
  },

  // Dates Card
  datesCard: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    padding: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  dateRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 16,
  },
  dateLabel: {
    fontSize: 14,
    color: '#A0522D',
  },
  dateValue: {
    fontSize: 14,
    color: '#8B4513',
    fontWeight: '500',
  },

  // Tags
  tagsContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: 8,
  },
  tag: {
    backgroundColor: '#D4A574',
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 16,
  },
  tagText: {
    fontSize: 12,
    color: '#FFFFFF',
    fontWeight: '500',
  },

  // Notes Card
  notesCard: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    padding: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  notesText: {
    fontSize: 16,
    color: '#8B4513',
    lineHeight: 24,
  },

  // Action Section
  actionSection: {
    gap: 12,
  },
  primaryButton: {
    backgroundColor: '#D4A574',
    borderRadius: 16,
    paddingVertical: 16,
    alignItems: 'center',
    shadowColor: '#D4A574',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.3,
    shadowRadius: 8,
    elevation: 6,
  },
  primaryButtonText: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#FFFFFF',
  },
  secondaryButtonsRow: {
    flexDirection: 'row',
    gap: 12,
  },
  secondaryButton: {
    flex: 1,
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    paddingVertical: 14,
    alignItems: 'center',
    borderWidth: 2,
    borderColor: '#D4A574',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  secondaryButtonText: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#D4A574',
  },
  shareButton: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    paddingVertical: 14,
    alignItems: 'center',
    borderWidth: 2,
    borderColor: '#F4E99B',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  shareButtonText: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#8B4513',
  },

  bottomPadding: {
    height: 20,
  },
});