import { ThemedText } from '@/components/themed-text';
import React from 'react';
import {
    Platform,
    ScrollView,
    StyleSheet,
    TouchableOpacity,
    View,
} from 'react-native';

export default function ProfileScreen() {
  // Mock data - ‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏∞‡∏°‡∏≤‡∏à‡∏≤‡∏Å state ‡∏´‡∏£‡∏∑‡∏≠ API
  const userProfile = {
    name: '‡∏≠‡∏ô‡∏±‡∏ô‡∏ï‡πå ‡∏ß‡∏£‡∏£‡∏ì‡∏Å‡∏¥‡∏à',
    email: 'anan.wk@example.com',
    memberSince: '‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏° 2024',
    location: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
    favoriteGenre: '‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢, ‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå, ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå',
    readingGoal: 24,
    bio: '‡∏£‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏™‡∏π‡πà‡πÇ‡∏•‡∏Å‡∏Å‡∏ß‡πâ‡∏≤‡∏á ‡∏ä‡∏≠‡∏ö‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô'
  };

  const readingStats = {
    booksRead: 18,
    currentlyReading: 3,
    toRead: 12,
    goalProgress: 75,
    favoriteBook: 'Atomic Habits',
    readingStreak: 45
  };

  const achievements = [
    { icon: 'üèÜ', title: '‡∏ô‡∏±‡∏Å‡∏≠‡πà‡∏≤‡∏ô‡∏ï‡∏±‡∏ß‡∏¢‡∏á', description: '‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ 50 ‡πÄ‡∏•‡πà‡∏°' },
    { icon: 'üìö', title: '‡∏ô‡∏±‡∏Å‡∏™‡∏∞‡∏™‡∏°', description: '‡∏°‡∏µ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÉ‡∏ô‡∏Ñ‡∏•‡∏±‡∏á 100 ‡πÄ‡∏•‡πà‡∏°' },
    { icon: 'üî•', title: '‡∏≠‡πà‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á', description: '‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ 30 ‡∏ß‡∏±‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô' },
    { icon: '‚≠ê', title: '‡∏ô‡∏±‡∏Å‡∏£‡∏µ‡∏ß‡∏¥‡∏ß', description: '‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß 25 ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á' }
  ];

  return (
    <View style={styles.container}>
      {/* Header with Profile */}
      <View style={styles.headerContainer}>
        <View style={styles.profileHeader}>
          <View style={styles.avatarContainer}>
            <View style={styles.avatar}>
              <ThemedText style={styles.avatarText}>A</ThemedText>
            </View>
            <View style={styles.onlineIndicator} />
          </View>
          
          <View style={styles.profileInfo}>
            <ThemedText style={styles.userName}>{userProfile.name}</ThemedText>
            <ThemedText style={styles.userEmail}>{userProfile.email}</ThemedText>
            <ThemedText style={styles.memberSince}>
              ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà {userProfile.memberSince}
            </ThemedText>
          </View>
        </View>
      </View>

      <ScrollView 
        style={styles.scrollContainer}
        showsVerticalScrollIndicator={false}
        contentContainerStyle={styles.scrollContent}
      >
        {/* Reading Progress */}
        <View style={styles.progressSection}>
          <ThemedText style={styles.sectionTitle}>‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏õ‡∏µ 2024</ThemedText>
          <View style={styles.progressCard}>
            <View style={styles.progressHeader}>
              <ThemedText style={styles.progressNumber}>
                {readingStats.booksRead}/{userProfile.readingGoal}
              </ThemedText>
              <ThemedText style={styles.progressLabel}>‡πÄ‡∏•‡πà‡∏°</ThemedText>
            </View>
            <View style={styles.progressBarContainer}>
              <View style={styles.progressBarBackground}>
                <View style={[styles.progressBarFill, { width: `${readingStats.goalProgress}%` }]} />
              </View>
              <ThemedText style={styles.progressPercentage}>
                {readingStats.goalProgress}%
              </ThemedText>
            </View>
            <ThemedText style={styles.progressDescription}>
              ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏≠‡∏µ‡∏Å {userProfile.readingGoal - readingStats.booksRead} ‡πÄ‡∏•‡πà‡∏° ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏£‡∏•‡∏∏‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
            </ThemedText>
          </View>
        </View>

        {/* Reading Statistics */}
        <View style={styles.section}>
          <ThemedText style={styles.sectionTitle}>‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô</ThemedText>
          <View style={styles.statsGrid}>
            <View style={[styles.statCard, styles.finishedStatCard]}>
              <ThemedText style={styles.statIcon}>üìñ</ThemedText>
              <ThemedText style={styles.statNumber}>{readingStats.booksRead}</ThemedText>
              <ThemedText style={styles.statLabel}>‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß</ThemedText>
            </View>
            <View style={[styles.statCard, styles.readingStatCard]}>
              <ThemedText style={styles.statIcon}>üìö</ThemedText>
              <ThemedText style={styles.statNumber}>{readingStats.currentlyReading}</ThemedText>
              <ThemedText style={styles.statLabel}>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡πà‡∏≤‡∏ô</ThemedText>
            </View>
            <View style={[styles.statCard, styles.toReadStatCard]}>
              <ThemedText style={styles.statIcon}>‚≠ê</ThemedText>
              <ThemedText style={styles.statNumber}>{readingStats.toRead}</ThemedText>
              <ThemedText style={styles.statLabel}>‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô</ThemedText>
            </View>
            <View style={[styles.statCard, styles.streakStatCard]}>
              <ThemedText style={styles.statIcon}>üî•</ThemedText>
              <ThemedText style={styles.statNumber}>{readingStats.readingStreak}</ThemedText>
              <ThemedText style={styles.statLabel}>‡∏ß‡∏±‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô</ThemedText>
            </View>
          </View>
        </View>

        {/* Personal Information */}
        <View style={styles.section}>
          <ThemedText style={styles.sectionTitle}>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</ThemedText>
          <View style={styles.infoCard}>
            <View style={styles.infoRow}>
              <ThemedText style={styles.infoIcon}>üìç</ThemedText>
              <View style={styles.infoContent}>
                <ThemedText style={styles.infoLabel}>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</ThemedText>
                <ThemedText style={styles.infoValue}>{userProfile.location}</ThemedText>
              </View>
            </View>
            <View style={styles.infoRow}>
              <ThemedText style={styles.infoIcon}>üìö</ThemedText>
              <View style={styles.infoContent}>
                <ThemedText style={styles.infoLabel}>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö</ThemedText>
                <ThemedText style={styles.infoValue}>{userProfile.favoriteGenre}</ThemedText>
              </View>
            </View>
            <View style={styles.infoRow}>
              <ThemedText style={styles.infoIcon}>‚≠ê</ThemedText>
              <View style={styles.infoContent}>
                <ThemedText style={styles.infoLabel}>‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÇ‡∏õ‡∏£‡∏î</ThemedText>
                <ThemedText style={styles.infoValue}>{readingStats.favoriteBook}</ThemedText>
              </View>
            </View>
          </View>
        </View>

        {/* About Me */}
        <View style={styles.section}>
          <ThemedText style={styles.sectionTitle}>‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏â‡∏±‡∏ô</ThemedText>
          <View style={styles.bioCard}>
            <ThemedText style={styles.bioText}>{userProfile.bio}</ThemedText>
          </View>
        </View>

        {/* Achievements */}
        <View style={styles.section}>
          <ThemedText style={styles.sectionTitle}>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</ThemedText>
          <View style={styles.achievementsGrid}>
            {achievements.map((achievement, index) => (
              <View key={index} style={styles.achievementCard}>
                <ThemedText style={styles.achievementIcon}>{achievement.icon}</ThemedText>
                <ThemedText style={styles.achievementTitle}>{achievement.title}</ThemedText>
                <ThemedText style={styles.achievementDescription}>
                  {achievement.description}
                </ThemedText>
              </View>
            ))}
          </View>
        </View>

        {/* Recent Activity */}
        <View style={styles.section}>
          <ThemedText style={styles.sectionTitle}>‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</ThemedText>
          <View style={styles.activityCard}>
            <View style={styles.activityItem}>
              <ThemedText style={styles.activityIcon}>üìñ</ThemedText>
              <View style={styles.activityContent}>
                <ThemedText style={styles.activityText}>‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏ö "Deep Work" ‡πÄ‡∏°‡∏∑‡πà‡∏≠ 2 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß</ThemedText>
                <ThemedText style={styles.activityTime}>2 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß</ThemedText>
              </View>
            </View>
            <View style={styles.activityItem}>
              <ThemedText style={styles.activityIcon}>‚≠ê</ThemedText>
              <View style={styles.activityContent}>
                <ThemedText style={styles.activityText}>‡πÄ‡∏û‡∏¥‡πà‡∏° "Clean Code" ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</ThemedText>
                <ThemedText style={styles.activityTime}>5 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß</ThemedText>
              </View>
            </View>
            <View style={styles.activityItem}>
              <ThemedText style={styles.activityIcon}>üèÜ</ThemedText>
              <View style={styles.activityContent}>
                <ThemedText style={styles.activityText}>‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à "‡∏≠‡πà‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á"</ThemedText>
                <ThemedText style={styles.activityTime}>1 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß</ThemedText>
              </View>
            </View>
          </View>
        </View>

        {/* Action Buttons */}
        <View style={styles.actionSection}>
          <TouchableOpacity style={styles.primaryButton}>
            <ThemedText style={styles.primaryButtonText}>‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</ThemedText>
          </TouchableOpacity>
          
          <TouchableOpacity style={styles.secondaryButton}>
            <ThemedText style={styles.secondaryButtonText}>‚öôÔ∏è ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</ThemedText>
          </TouchableOpacity>
        </View>

        <View style={styles.bottomPadding} />
      </ScrollView>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#FEF9C3',
  },

  // Header
  headerContainer: {
    backgroundColor: '#F4E99B',
    paddingTop: Platform.OS === 'ios' ? 60 : 40,
    paddingHorizontal: 20,
    paddingBottom: 30,
    borderBottomLeftRadius: 30,
    borderBottomRightRadius: 30,
  },
  profileHeader: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  avatarContainer: {
    position: 'relative',
    marginRight: 16,
  },
  avatar: {
    width: 80,
    height: 80,
    borderRadius: 40,
    backgroundColor: '#FFFFFF',
    justifyContent: 'center',
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.2,
    shadowRadius: 8,
    elevation: 6,
    borderWidth: 3,
    borderColor: '#D4A574',
  },
  avatarText: {
    fontSize: 32,
    fontWeight: 'bold',
    color: '#8B4513',
  },
  onlineIndicator: {
    position: 'absolute',
    bottom: 2,
    right: 2,
    width: 20,
    height: 20,
    borderRadius: 10,
    backgroundColor: '#28A745',
    borderWidth: 3,
    borderColor: '#FFFFFF',
  },
  profileInfo: {
    flex: 1,
  },
  userName: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#8B4513',
    marginBottom: 4,
  },
  userEmail: {
    fontSize: 14,
    color: '#A0522D',
    marginBottom: 4,
  },
  memberSince: {
    fontSize: 12,
    color: '#A0522D',
    fontStyle: 'italic',
  },

  // Scroll Container
  scrollContainer: {
    flex: 1,
  },
  scrollContent: {
    paddingHorizontal: 20,
    paddingTop: 20,
  },

  // Progress Section
  progressSection: {
    marginBottom: 20,
  },
  progressCard: {
    backgroundColor: '#FFFFFF',
    borderRadius: 20,
    padding: 24,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.1,
    shadowRadius: 8,
    elevation: 4,
  },
  progressHeader: {
    flexDirection: 'row',
    alignItems: 'baseline',
    justifyContent: 'center',
    marginBottom: 16,
  },
  progressNumber: {
    fontSize: 36,
    fontWeight: 'bold',
    color: '#8B4513',
  },
  progressLabel: {
    fontSize: 18,
    color: '#A0522D',
    marginLeft: 8,
  },
  progressBarContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12,
  },
  progressBarBackground: {
    flex: 1,
    height: 8,
    backgroundColor: '#F4E99B',
    borderRadius: 4,
    marginRight: 12,
  },
  progressBarFill: {
    height: '100%',
    backgroundColor: '#D4A574',
    borderRadius: 4,
  },
  progressPercentage: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#8B4513',
    minWidth: 45,
  },
  progressDescription: {
    fontSize: 14,
    color: '#A0522D',
    textAlign: 'center',
  },

  // Sections
  section: {
    marginBottom: 20,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#8B4513',
    marginBottom: 12,
  },

  // Stats Grid
  statsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: 12,
  },
  statCard: {
    flex: 1,
    minWidth: '45%',
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    padding: 16,
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  finishedStatCard: {
    backgroundColor: '#E8F5E8',
  },
  readingStatCard: {
    backgroundColor: '#E6F3FF',
  },
  toReadStatCard: {
    backgroundColor: '#FFE4B5',
  },
  streakStatCard: {
    backgroundColor: '#FFE4E1',
  },
  statIcon: {
    fontSize: 24,
    marginBottom: 8,
  },
  statNumber: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#8B4513',
    marginBottom: 4,
  },
  statLabel: {
    fontSize: 12,
    color: '#A0522D',
    textAlign: 'center',
  },

  // Info Card
  infoCard: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    padding: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  infoRow: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 16,
  },
  infoIcon: {
    fontSize: 20,
    marginRight: 16,
    width: 24,
  },
  infoContent: {
    flex: 1,
  },
  infoLabel: {
    fontSize: 12,
    color: '#A0522D',
    marginBottom: 2,
  },
  infoValue: {
    fontSize: 16,
    color: '#8B4513',
    fontWeight: '500',
  },

  // Bio Card
  bioCard: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    padding: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  bioText: {
    fontSize: 16,
    color: '#8B4513',
    lineHeight: 24,
  },

  // Achievements
  achievementsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: 12,
  },
  achievementCard: {
    flex: 1,
    minWidth: '45%',
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    padding: 16,
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  achievementIcon: {
    fontSize: 32,
    marginBottom: 8,
  },
  achievementTitle: {
    fontSize: 14,
    fontWeight: 'bold',
    color: '#8B4513',
    marginBottom: 4,
    textAlign: 'center',
  },
  achievementDescription: {
    fontSize: 12,
    color: '#A0522D',
    textAlign: 'center',
  },

  // Activity Card
  activityCard: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    padding: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  activityItem: {
    flexDirection: 'row',
    alignItems: 'flex-start',
    marginBottom: 16,
  },
  activityIcon: {
    fontSize: 20,
    marginRight: 12,
    marginTop: 2,
  },
  activityContent: {
    flex: 1,
  },
  activityText: {
    fontSize: 14,
    color: '#8B4513',
    marginBottom: 4,
  },
  activityTime: {
    fontSize: 12,
    color: '#A0522D',
  },

  // Action Section
  actionSection: {
    gap: 12,
  },
  primaryButton: {
    backgroundColor: '#D4A574',
    borderRadius: 16,
    paddingVertical: 16,
    alignItems: 'center',
    shadowColor: '#D4A574',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.3,
    shadowRadius: 8,
    elevation: 6,
  },
  primaryButtonText: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#FFFFFF',
  },
  secondaryButton: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    paddingVertical: 16,
    alignItems: 'center',
    borderWidth: 2,
    borderColor: '#D4A574',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  secondaryButtonText: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#D4A574',
  },

  bottomPadding: {
    height: 20,
  },
});